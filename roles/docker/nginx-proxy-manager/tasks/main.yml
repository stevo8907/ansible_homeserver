---
# tasks file for ./nginx-proxy-manager

- name: create nginx proxy group
  group:
    name: "{{ group }}"
    gid: "{{ gid}}"
    state: present

- name: create proxy user
  user:
    name: "{{ username }}"
    uid: "{{ uid }}"
    group: "{{ group }}"
    create_home: no

- name: docker pull nginx-proxy-manager image
  community.docker.docker_container:
    name: npm-image
    image: "{{ image }}"

- name: create the npm container and start the docker Container
  docker_container:
    name: "{{ container }}"
    image: "{{ image }}"
    state: started
    ports:
      - "{{ http }}:{{ http }}"
      - "{{ https }}:{{ https }}"
      - "{{ gui }}:{{ gui }}"
    env:
        UID: "{{ uid }}"
        gid: "{{ gid }}"
        DB_MYSQL_HOST: "{{ host }}"
        DB_MYSQL_PORT: "{{ dbport }}"
        DB_MYSQL_USER: "{{ USER }}"
        DB_MYSQL_PASSWORD: "{{ PASSWORD }}"
        DB_MYSQL_NAME: "{{ NAME }}"
    volumes:
      - "{{ config }}"
      - "{{ letsencrypt }}"

### MYSQL DB ###

- name: docker pull "{{ DB_container }}" image
  community.docker.docker_container:
    name: npm-DB-image
    image: "{{ DB_image }}"

- name: create and run the MYSQL DB ##
  community.docker.docker_container:
    name: "{{ DB_container }}"
    image: "{{ DB_image }}"
    state: started
    env:
        UID: "{{ uid }}"
        GID: "{{ gid }}"
        TZ:  "{{ timezone }}"
        MYSQL_ROOT_PASSWORD: "{{ SQL_DB_ROOT_PASSWORD }}"
        MYSQL_DATABASE: "{{ SQL_DATABASE }}"
        MYSQL_USER: "{{ USER }}"
        MYSQL_PASSWORD: "{{ PASSWORD }}"
    volumes:
      - "{{ mysql_config }}"
    restart_policy: unless-stopped 